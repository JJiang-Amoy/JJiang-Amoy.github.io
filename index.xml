<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Jian Jiang's website under construction</title><link>https://jjiang-amoy.github.io/</link><description>Recent content on Jian Jiang's website under construction</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 14 Mar 2022 06:15:35 +0600</lastBuildDate><atom:link href="https://jjiang-amoy.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Mermaid Support</title><link>https://jjiang-amoy.github.io/posts/writing-posts/mermaid/</link><pubDate>Mon, 14 Mar 2022 06:15:35 +0600</pubDate><guid>https://jjiang-amoy.github.io/posts/writing-posts/mermaid/</guid><description>This theme comes with built in mermaid support powered by maemaidj-js. To enable mermaid for a page, you have to put mermaid: true in your page front-matter. For example, this page has the following front-matter:
title: &amp;#34;Mermaid Support&amp;#34; date: 2022-03-14T06:15:35+06:00 menu: sidebar: name: Mermaid identifier: writing-post-mermaid parent: writing-post weight: 60 mermaid: true Then, you can use mermaid short code to add your mermaid content. For example:
{{&amp;lt; mermaid align=&amp;#34;center&amp;#34;&amp;gt;}} # your mermaid content here {{&amp;lt; /mermaid &amp;gt;}} The mermaid short code accept the following parameters:</description></item><item><title>Comments</title><link>https://jjiang-amoy.github.io/posts/comments/</link><pubDate>Mon, 14 Mar 2022 06:00:23 +0600</pubDate><guid>https://jjiang-amoy.github.io/posts/comments/</guid><description>Comments This theme has built-in support for comment on the posts. Currently, it support the following comment plugins:
Disqus Valine Utterances Giscus Disqus Disqus is a popular comment plug-in. After signing up to Disqus you will need to provide your shortname under params.features.comment section of your config.yaml file as below:
params: features: comment: enable: true disqus: shortName: &amp;lt;your-disqus-shortname&amp;gt; Valine Valine appears to be a Chinese comments comments plugin. You can enable valine comment plugin by adding valine section under params.</description></item><item><title>Supports Links</title><link>https://jjiang-amoy.github.io/posts/supports/</link><pubDate>Mon, 14 Mar 2022 06:00:23 +0600</pubDate><guid>https://jjiang-amoy.github.io/posts/supports/</guid><description>This theme supports adding various support/donation links in your site. Currently, supported support links are:
Ko-fi Ko-fi You can add your Ko-fi floating button in your website. To add the floating button, add the support section under params.features section of your sites config.yaml file:
params: features: support: enabled: true kofi: user: &amp;lt;your ko-fi user id&amp;gt; text: Tip Me textColor: &amp;#39;#f9fafc&amp;#39; backgroundColor: &amp;#39;#248aaa&amp;#39;</description></item><item><title>Customizing the layout</title><link>https://jjiang-amoy.github.io/posts/customizing/customize-layout/</link><pubDate>Sat, 07 Aug 2021 06:20:50 +0600</pubDate><guid>https://jjiang-amoy.github.io/posts/customizing/customize-layout/</guid><description>We&amp;rsquo;ve all been there We all want to be able to customize the layout of a given theme, and in this short tutorial I will show you how. I stumbled my way through this, and I hope you won&amp;rsquo;t have to as well.
Step 1 / CSS Finding what you are wanting to customize. The first thing I wanted to do was customize the css styles. I stumbled through a few git issues, and posts and found that truly the author made it easy, I just didn&amp;rsquo;t think it through (as I was new to Hugo as well).</description></item><item><title>Prepare Your Site</title><link>https://jjiang-amoy.github.io/posts/getting-started/prepare-site/</link><pubDate>Mon, 08 Jun 2020 23:00:20 +0600</pubDate><guid>https://jjiang-amoy.github.io/posts/getting-started/prepare-site/</guid><description>Greeting! Thank you for deciding to use this theme. In this post, we are going to create a hugo site from scratch. Then, we will configure it with Toha theme, make it multilingual, add some example posts. At the end of this post, you should be able to run a fully functional hugo site with Toha theme locally.
If you want a head start, you can just fork hugo-toha/hugo-toha.github.io repo, rename it and update with your own data.</description></item><item><title>Deploy site in Github Pages</title><link>https://jjiang-amoy.github.io/posts/getting-started/github-pages/</link><pubDate>Mon, 08 Jun 2020 22:00:20 +0600</pubDate><guid>https://jjiang-amoy.github.io/posts/getting-started/github-pages/</guid><description>In this post, we are going to deploy the site we have created in previous post in Github Pages. At first, make sure that your repository name is &amp;lt;your username&amp;gt;.github.io. Then, commit any local uncommitted changes and push into Github.
Setup Default Branch GitHub don&amp;rsquo;t serve a site from hugo templates directly. Instead, we have to provide the generated (HTML, CSS, JS etc.) files after building the site. From now, we are going to maintain two branches for our site.</description></item><item><title>Deploy site in Netlify</title><link>https://jjiang-amoy.github.io/posts/getting-started/netlify/</link><pubDate>Mon, 08 Jun 2020 21:00:15 +0600</pubDate><guid>https://jjiang-amoy.github.io/posts/getting-started/netlify/</guid><description>Netlify offers an excellent and easy process for deploying hugo static site. You can deploy your site in matter of few clicks. Unlike Github Pages, you can name your repository whatever you want. You can also customize the site URL.
In this post, we will show the step-by-step process of deploying a hugo site with netlify.
Add Netlify Configuration At first, create a netlify.toml file at the root of your repository and add the following configuration there:</description></item><item><title>Automate Theme Update</title><link>https://jjiang-amoy.github.io/posts/getting-started/theme-update/</link><pubDate>Mon, 08 Jun 2020 20:00:15 +0600</pubDate><guid>https://jjiang-amoy.github.io/posts/getting-started/theme-update/</guid><description>You might want to keep your site up-to-date with the latest version of theme to enjoy the latest features and fixes. In this post, we are going to setup a Dependabot Github app to automatically update the theme version. The app will check daily if there is any update in the submodules. If it finds any update in the theme, it will create a PR updating your site to the latest theme version.</description></item><item><title>Features</title><link>https://jjiang-amoy.github.io/posts/features/</link><pubDate>Mon, 08 Jun 2020 08:59:13 +0600</pubDate><guid>https://jjiang-amoy.github.io/posts/features/</guid><description>This theme has been designed from a personal point of preference. As a developer, I want to organize my portfolio in a way that will reflect my skills best. So, this theme may or may not meet your needs but I will be happy to have your feedback.
This post will give you an overview of the features that this theme incorporates.
Minimalist Design This theme has been designed to be minimalist and beautiful.</description></item><item><title>Shortcodes Samples</title><link>https://jjiang-amoy.github.io/posts/shortcodes/</link><pubDate>Mon, 08 Jun 2020 08:06:25 +0600</pubDate><guid>https://jjiang-amoy.github.io/posts/shortcodes/</guid><description>This is a sample post intended to test the followings:
Default hero image. Different shortcodes. Alert The following alerts are available in this theme.
This is sample alert with type=&amp;quot;success&amp;quot;. This is sample alert with type=&amp;quot;danger&amp;quot;. This is sample alert with type=&amp;quot;warning&amp;quot;. This is sample alert with type=&amp;quot;info&amp;quot;. This is sample alert with type=&amp;quot;dark&amp;quot;. This is sample alert with type=&amp;quot;primary&amp;quot;. This is sample alert with type=&amp;quot;secondary&amp;quot;.</description></item><item><title>Markdown Samples</title><link>https://jjiang-amoy.github.io/posts/markdown-sample/</link><pubDate>Mon, 08 Jun 2020 08:06:25 +0600</pubDate><guid>https://jjiang-amoy.github.io/posts/markdown-sample/</guid><description>This is a sample post intended to test the followings:
A different post author. Table of contents. Markdown content rendering. Math rendering. Emoji rendering. Markdown Syntax Rendering Headings The following HTML &amp;lt;h1&amp;gt;â€”&amp;lt;h6&amp;gt; elements represent six levels of section headings. &amp;lt;h1&amp;gt; is the highest section level while &amp;lt;h6&amp;gt; is the lowest.
H1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur?</description></item><item><title>Introduction</title><link>https://jjiang-amoy.github.io/posts/introduction/</link><pubDate>Mon, 08 Jun 2020 08:06:25 +0600</pubDate><guid>https://jjiang-amoy.github.io/posts/introduction/</guid><description>Greeting! This is an introduction post. This post tests the followings:
Hero image is in the same directory as the post. This post should be at top of the sidebar. Post author should be the same as specified in author.yaml file.</description></item><item><title>Rich Content</title><link>https://jjiang-amoy.github.io/posts/category/sub-category/rich-content/</link><pubDate>Mon, 08 Jun 2020 08:06:25 +0600</pubDate><guid>https://jjiang-amoy.github.io/posts/category/sub-category/rich-content/</guid><description>This sample post tests the followings:
Category, sub-category nesting in the sidebar. Hero image and other images are in images folder inside this post directory. Different media rendering like image, tweet, YouTube video, Vimeo video etc. Image Sample Tweet Sample YouTube Video Sample Vimeo Video Sample</description></item><item><title>Configuring Site Parameters</title><link>https://jjiang-amoy.github.io/posts/configuration/site-parameters/</link><pubDate>Mon, 08 Jun 2020 06:20:55 +0600</pubDate><guid>https://jjiang-amoy.github.io/posts/configuration/site-parameters/</guid><description>After installing this theme, when you first run your site, it will start with the default parameters. It should look similar to this example site except it will not have any sections on the homepage. Those sections are added via some data files. In the next few posts, I am going to show you how you can add those sections by providing the data files.
In this post, I am going to show you how you can change the site parameters to change background, logo, author information, and enable/disable various features.</description></item><item><title>Configuring About Section</title><link>https://jjiang-amoy.github.io/posts/configuration/sections/about/</link><pubDate>Mon, 08 Jun 2020 06:20:50 +0600</pubDate><guid>https://jjiang-amoy.github.io/posts/configuration/sections/about/</guid><description>The About section should give the viewer a brief idea about yourself. In this post, we are going to configure the About section of your website.
At first, create about.yaml file in the data/en/sections directory of your site. Then, follow the following instructions.
Add Section information section: name: About # Title of section (default: &amp;#34;&amp;#34;) id: about # url id/slug of section *Required* enable: true # Boolean to determine if this section is enabled (default: false) weight: 1 # Order to display section in (default: alphabetical followed by weight) showOnNavbar: true # Boolean to determine if a link should be shown for this section on the navbar template: sections/about.</description></item><item><title>Configuring Skills Section</title><link>https://jjiang-amoy.github.io/posts/configuration/sections/skills/</link><pubDate>Mon, 08 Jun 2020 06:20:45 +0600</pubDate><guid>https://jjiang-amoy.github.io/posts/configuration/sections/skills/</guid><description>Warning: New breaking changes has been introduced in the master. This guide is now outdated. It will be updated soon. Now, your site configuration files should be in data/en/sections directory and should follow this format. The Skills section should give the viewer an idea about not only the list of skills you have but also an idea of the depth of your knowledge on a particular skill. In this post, we are going to configure the Skills section of your site.</description></item><item><title>Configuring Education Section</title><link>https://jjiang-amoy.github.io/posts/configuration/sections/education/</link><pubDate>Mon, 08 Jun 2020 06:20:40 +0600</pubDate><guid>https://jjiang-amoy.github.io/posts/configuration/sections/education/</guid><description>Post coming soon&amp;hellip;&amp;hellip;&amp;hellip;</description></item><item><title>Configuring Experiences Section</title><link>https://jjiang-amoy.github.io/posts/configuration/sections/experiences/</link><pubDate>Mon, 08 Jun 2020 06:20:40 +0600</pubDate><guid>https://jjiang-amoy.github.io/posts/configuration/sections/experiences/</guid><description>Warning: New breaking changes has been introduced in the master. This guide is now outdated. It will be updated soon. Now, your site configuration files should be in data/en/sections directory and should follow this format. The Experiences section has been designed to truly reflect your career background. It should give the viewer an idea about the responsibilities you have handled in various stages of your career. In this post, we are going to configure the Experiences section of your site.</description></item><item><title>Configuring Projects Section</title><link>https://jjiang-amoy.github.io/posts/configuration/sections/projects/</link><pubDate>Mon, 08 Jun 2020 06:20:35 +0600</pubDate><guid>https://jjiang-amoy.github.io/posts/configuration/sections/projects/</guid><description>Warning: New breaking changes has been introduced in the master. This guide is now outdated. It will be updated soon. Now, your site configuration files should be in data/en/sections directory and should follow this format. The Projects section has been designed to showcase your projects in a meaningful way. In this post, we are going to configure the Projects section of your site.
At first, create a projects.yaml file in the data directory of your site.</description></item><item><title>Configuring Recent Posts Section</title><link>https://jjiang-amoy.github.io/posts/configuration/sections/recent-posts/</link><pubDate>Mon, 08 Jun 2020 06:20:34 +0600</pubDate><guid>https://jjiang-amoy.github.io/posts/configuration/sections/recent-posts/</guid><description>The Recent Posts section will display the most recent posts from your content. The configuration is simple, and should be stored in data/en/sections.
Configuration After you have created the file recent-posts.yaml, the configuration is very simple,
# section information section: name: Recent Posts # Title of section (default: &amp;#34;&amp;#34;) id: recent-posts # url id/slug of section *Required* enable: true # Boolean to determine if this section is enabled (default: false) weight: 6 # Order to display section in (default: alphabetical followed by weight) showOnNavbar: true # Boolean to determine if a link should be shown for this section on the navbar hideTitle: true # Can optionally hide the title in sections (default: false) numShow: 4 # Can optionally increase the number of posts to display (default: 3)</description></item><item><title>Configuring Achievements Section</title><link>https://jjiang-amoy.github.io/posts/configuration/sections/achievements/</link><pubDate>Mon, 08 Jun 2020 06:20:30 +0600</pubDate><guid>https://jjiang-amoy.github.io/posts/configuration/sections/achievements/</guid><description>Warning: New breaking changes has been introduced in the master. This guide is now outdated. It will be updated soon. Now, your site configuration files should be in data/en/sections directory and should follow this format. The Achievements section has been designed to showcase your achievements in a gallery view. This post will show how to configure the Achievements section of your site.
At first, create an achievements.yaml file in the data directory of your site.</description></item><item><title>Creating Category</title><link>https://jjiang-amoy.github.io/posts/writing-posts/organizing/category/</link><pubDate>Mon, 08 Jun 2020 06:15:55 +0600</pubDate><guid>https://jjiang-amoy.github.io/posts/writing-posts/organizing/category/</guid><description>First, we need to understand how to create a post then we will be able to create categories.
Post Creation To create a post in your blog first you need to go to the folder named posts. Here, create a file _index.md(The file name has to be exactly the same as it is mentioned). Then open the file and add below lines:
--- title: Posts --- now, save and close the file.</description></item><item><title>Creating Sub Category</title><link>https://jjiang-amoy.github.io/posts/writing-posts/organizing/sub-category/example/</link><pubDate>Mon, 08 Jun 2020 06:15:50 +0600</pubDate><guid>https://jjiang-amoy.github.io/posts/writing-posts/organizing/sub-category/example/</guid><description>Complete Post Coming Soon&amp;hellip;</description></item><item><title>Front Matter</title><link>https://jjiang-amoy.github.io/posts/writing-posts/front-matter/</link><pubDate>Mon, 08 Jun 2020 06:15:45 +0600</pubDate><guid>https://jjiang-amoy.github.io/posts/writing-posts/front-matter/</guid><description>Complete Post Coming Soon&amp;hellip;</description></item><item><title>Markdown Syntax Guide</title><link>https://jjiang-amoy.github.io/posts/writing-posts/markdown-syntax/</link><pubDate>Mon, 08 Jun 2020 06:15:40 +0600</pubDate><guid>https://jjiang-amoy.github.io/posts/writing-posts/markdown-syntax/</guid><description>&lt;p>This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.&lt;/p></description></item><item><title>Math Type Settings</title><link>https://jjiang-amoy.github.io/posts/writing-posts/math/</link><pubDate>Mon, 08 Jun 2020 06:15:35 +0600</pubDate><guid>https://jjiang-amoy.github.io/posts/writing-posts/math/</guid><description>&lt;p>Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.&lt;/p></description></item><item><title>Rich Content</title><link>https://jjiang-amoy.github.io/posts/writing-posts/rich-content/</link><pubDate>Mon, 08 Jun 2020 06:15:30 +0600</pubDate><guid>https://jjiang-amoy.github.io/posts/writing-posts/rich-content/</guid><description>&lt;p>Hugo ships with several &lt;a href="https://gohugo.io/content-management/shortcodes/#use-hugo-s-built-in-shortcodes">Built-in Shortcodes&lt;/a> for rich content, along with a &lt;a href="https://gohugo.io/about/hugo-and-gdpr/">Privacy Config&lt;/a> and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.&lt;/p></description></item><item><title>Using Emoji</title><link>https://jjiang-amoy.github.io/posts/writing-posts/using-emoji/</link><pubDate>Mon, 08 Jun 2020 06:15:25 +0600</pubDate><guid>https://jjiang-amoy.github.io/posts/writing-posts/using-emoji/</guid><description>&lt;p>Emoji can be enabled in a Hugo project in a number of ways.&lt;/p></description></item><item><title>Analytics</title><link>https://jjiang-amoy.github.io/posts/analytics/</link><pubDate>Mon, 08 Jun 2020 06:00:23 +0600</pubDate><guid>https://jjiang-amoy.github.io/posts/analytics/</guid><description>Analytics This theme has built in support for various analytic tools. Currently, it supports the following analytics:
GoatCounter counter.dev Google Analytics Warning: When adding analytics, you should consider local legislation to see if a privacy banner is required to inform users of the tracking in personal data. In general (not legal advice), privacy-friendly, anonymous methods such as counter.dev and GoatCounter don&amp;rsquo;t need a banner, since they do not collect personally identifiable data.</description></item><item><title>How to Translate Site Data</title><link>https://jjiang-amoy.github.io/posts/translation/site-data/</link><pubDate>Sun, 07 Jun 2020 06:20:50 +0600</pubDate><guid>https://jjiang-amoy.github.io/posts/translation/site-data/</guid><description>Coming soon&amp;hellip;&amp;hellip;.</description></item><item><title>How to add a new section</title><link>https://jjiang-amoy.github.io/posts/customizing/new-section/</link><pubDate>Sun, 07 Jun 2020 06:20:50 +0600</pubDate><guid>https://jjiang-amoy.github.io/posts/customizing/new-section/</guid><description>Coming soon&amp;hellip;&amp;hellip;.</description></item><item><title>How to Translate Posts</title><link>https://jjiang-amoy.github.io/posts/translation/content/</link><pubDate>Sun, 07 Jun 2020 06:20:50 +0600</pubDate><guid>https://jjiang-amoy.github.io/posts/translation/content/</guid><description>Coming soon&amp;hellip;&amp;hellip;.</description></item><item><title>Schedule</title><link>https://jjiang-amoy.github.io/notes/schedule_template/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jjiang-amoy.github.io/notes/schedule_template/</guid><description>2022-5-30 Meeting schedule is shown below
10:10-10:20 With dasd</description></item><item><title>Basic Types</title><link>https://jjiang-amoy.github.io/notes/go/basic/types/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jjiang-amoy.github.io/notes/go/basic/types/</guid><description>Strings str := &amp;#34;Hello&amp;#34; Multiline string
str := `Multiline string` Numbers Typical types
num := 3 // int num := 3. // float64 num := 3 + 4i // complex128 num := byte(&amp;#39;a&amp;#39;) // byte (alias for uint8) Other Types
var u uint = 7 // uint (unsigned) var p float32 = 22.7 // 32-bit float Arrays // var numbers [5]int numbers := [.</description></item><item><title>File Manipulation</title><link>https://jjiang-amoy.github.io/notes/go/advanced/files/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jjiang-amoy.github.io/notes/go/advanced/files/</guid><description>Condition if day == &amp;#34;sunday&amp;#34; || day == &amp;#34;saturday&amp;#34; { rest() } else if day == &amp;#34;monday&amp;#34; &amp;amp;&amp;amp; isTired() { groan() } else { work() } if _, err := doThing(); err != nil { fmt.Println(&amp;#34;Uh oh&amp;#34;)</description></item><item><title>Bash Variables</title><link>https://jjiang-amoy.github.io/notes/bash/basic/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jjiang-amoy.github.io/notes/bash/basic/</guid><description>Variable NAME=&amp;#34;John&amp;#34; echo $NAME echo &amp;#34;$NAME&amp;#34; echo &amp;#34;${NAME} Condition if [[ -z &amp;#34;$string&amp;#34; ]]; then echo &amp;#34;String is empty&amp;#34; elif [[ -n &amp;#34;$string&amp;#34; ]]; then echo &amp;#34;String is not empty&amp;#34; fi</description></item><item><title>Introduction</title><link>https://jjiang-amoy.github.io/notes/go/basic/introduction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jjiang-amoy.github.io/notes/go/basic/introduction/</guid><description>Hello World A sample go program is show here.
package main import &amp;#34;fmt&amp;#34; func main() { message := greetMe(&amp;#34;world&amp;#34;) fmt.Println(message) } func greetMe(name string) string { return &amp;#34;Hello, &amp;#34; + name + &amp;#34;!&amp;#34; } Run the program as below:
$ go run hello.go Variables Normal Declaration:
var msg string msg = &amp;#34;Hello&amp;#34; Shortcut:
msg := &amp;#34;Hello&amp;#34; Constants const Phi = 1.</description></item><item><title>Flow Control</title><link>https://jjiang-amoy.github.io/notes/go/basic/flow-control/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jjiang-amoy.github.io/notes/go/basic/flow-control/</guid><description>Condition if day == &amp;#34;sunday&amp;#34; || day == &amp;#34;saturday&amp;#34; { rest() } else if day == &amp;#34;monday&amp;#34; &amp;amp;&amp;amp; isTired() { groan() } else { work() } if _, err := doThing(); err != nil { fmt.Println(&amp;#34;Uh oh&amp;#34;) Switch switch day { case &amp;#34;sunday&amp;#34;: // cases don&amp;#39;t &amp;#34;fall through&amp;#34; by default! fallthrough case &amp;#34;saturday&amp;#34;: rest() default: work() } Loop for count := 0; count &amp;lt;= 10; count++ { fmt.</description></item></channel></rss>